{
    "data" : [
        "\nR version 3.6.3 (2020-02-29) -- \"Holding the Windsock\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin15.6.0 (64-bit)\n\nR es un software libre y viene sin GARANTIA ALGUNA.\nUsted puede redistribuirlo bajo ciertas circunstancias.\nEscriba 'license()' o 'licence()' para detalles de distribucion.\n\nR es un proyecto colaborativo con muchos contribuyentes.\nEscriba 'contributors()' para obtener más información y\n'citation()' para saber cómo citar R o paquetes de R en publicaciones.\n\n",
        "Escriba 'demo()' para demostraciones, 'help()' para el sistema on-line de ayuda,\no 'help.start()' para abrir el sistema de ayuda HTML con su navegador.\nEscriba 'q()' para salir de R.\n\n[Workspace loaded from ~/Desktop/Doctorado Ujaen/Paquetes R/clustering/.RData]\n\n\nRestarting R session...\n\n",
        "> ",
        "library(Clustering)",
        "> ",
        "plot_external_validation(df,\"variation_information\")",
        "> ",
        "metric = \"variation_information\"",
        "> ",
        "df",
        "$result\n       Algorithm     Distance               Clusters Dataset     Ranking timeExternal entropy \n  [1,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"4\"      \"dataframe\" \"1\"     \"0.0347\"     \"0\"     \n  [2,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"4\"      \"dataframe\" \"2\"     \"0.0488\"     \"0\"     \n  [3,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"5\"      \"dataframe\" \"1\"     \"0.0341\"     \"0\"     \n  [4,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"5\"      \"dataframe\" \"2\"     \"0.0355\"     \"0\"     \n  [5,] \"fuzzy_cm\"    \"fuzzy_cm\"            ",
        " \"6\"      \"dataframe\" \"1\"     \"0.0425\"     \"0.0482\"\n  [6,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"6\"      \"dataframe\" \"2\"     \"0.0454\"     \"0\"     \n  [7,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"4\"      \"dataframe\" \"1\"     \"0.0902\"     \"0\"     \n  [8,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"4\"      \"dataframe\" \"2\"     \"0.1056\"     \"0\"     \n  [9,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"5\"      \"dataframe\" \"1\"     \"0.0876\"     \"0.0482\"\n [10,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"5\"      \"dataframe\" \"2\"     \"0.0908\"    ",
        " \"0\"     \n [11,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"6\"      \"dataframe\" \"1\"     \"0.063\"      \"0\"     \n [12,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"6\"      \"dataframe\" \"2\"     \"0.1195\"     \"0\"     \n [13,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"4\"      \"dataframe\" \"1\"     \"0.1541\"     \"0\"     \n [14,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"4\"      \"dataframe\" \"2\"     \"0.2066\"     \"0\"     \n [15,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"5\"      \"dataframe\" \"1\"     \"0.1896\"     \"0.0482\"\n [16,] \"fuzzy_gk\"    \"fuzzy_gk\"            ",
        " \"5\"      \"dataframe\" \"2\"     \"0.2602\"     \"0\"     \n [17,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"6\"      \"dataframe\" \"1\"     \"0.1515\"     \"0\"     \n [18,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"6\"      \"dataframe\" \"2\"     \"0.1604\"     \"0\"     \n [19,] \"hclust\"      \"hclust_euclidean\"     \"4\"      \"dataframe\" \"1\"     \"0.0127\"     \"0\"     \n [20,] \"hclust\"      \"hclust_euclidean\"     \"5\"      \"dataframe\" \"1\"     \"0.0098\"     \"0\"     \n [21,] \"hclust\"      \"hclust_euclidean\"     \"6\"      \"dataframe\" \"1\"     \"0.0075\"    ",
        " \"0\"     \n [22,] \"apclusterK\"  \"apclusterK_euclidean\" \"4\"      \"dataframe\" \"1\"     \"0.0953\"     \"0\"     \n [23,] \"apclusterK\"  \"apclusterK_euclidean\" \"4\"      \"dataframe\" \"2\"     \"0.1558\"     \"0\"     \n [24,] \"apclusterK\"  \"apclusterK_euclidean\" \"5\"      \"dataframe\" \"1\"     \"0.0287\"     \"0\"     \n [25,] \"apclusterK\"  \"apclusterK_euclidean\" \"5\"      \"dataframe\" \"2\"     \"0.0335\"     \"0\"     \n [26,] \"apclusterK\"  \"apclusterK_euclidean\" \"6\"      \"dataframe\" \"1\"     \"0.046\"      \"0\"     \n [27,] \"apclusterK\"  \"apclusterK_euclidean\"",
        " \"6\"      \"dataframe\" \"2\"     \"0.0643\"     \"0\"     \n [28,] \"apclusterK\"  \"apclusterK_manhattan\" \"4\"      \"dataframe\" \"1\"     \"0.0289\"     \"0\"     \n [29,] \"apclusterK\"  \"apclusterK_manhattan\" \"4\"      \"dataframe\" \"2\"     \"0.0354\"     \"0\"     \n [30,] \"apclusterK\"  \"apclusterK_manhattan\" \"5\"      \"dataframe\" \"1\"     \"0.0289\"     \"0\"     \n [31,] \"apclusterK\"  \"apclusterK_manhattan\" \"5\"      \"dataframe\" \"2\"     \"0.0298\"     \"0\"     \n [32,] \"apclusterK\"  \"apclusterK_manhattan\" \"6\"      \"dataframe\" \"1\"     \"0.0283\"    ",
        " \"0\"     \n [33,] \"apclusterK\"  \"apclusterK_manhattan\" \"6\"      \"dataframe\" \"2\"     \"0.035\"      \"0\"     \n [34,] \"apclusterK\"  \"apclusterK_minkowski\" \"4\"      \"dataframe\" \"1\"     \"0.0246\"     \"0\"     \n [35,] \"apclusterK\"  \"apclusterK_minkowski\" \"4\"      \"dataframe\" \"2\"     \"0.0315\"     \"0\"     \n [36,] \"apclusterK\"  \"apclusterK_minkowski\" \"5\"      \"dataframe\" \"1\"     \"0.0288\"     \"0\"     \n [37,] \"apclusterK\"  \"apclusterK_minkowski\" \"5\"      \"dataframe\" \"2\"     \"0.0302\"     \"0\"     \n [38,] \"apclusterK\"  \"apclusterK_minkowski\"",
        " \"6\"      \"dataframe\" \"1\"     \"0.0311\"     \"0\"     \n [39,] \"apclusterK\"  \"apclusterK_minkowski\" \"6\"      \"dataframe\" \"2\"     \"0.0756\"     \"0\"     \n [40,] \"agnes\"       \"agnes_euclidean\"      \"4\"      \"dataframe\" \"1\"     \"0.0201\"     \"0\"     \n [41,] \"agnes\"       \"agnes_euclidean\"      \"5\"      \"dataframe\" \"1\"     \"0.0131\"     \"0\"     \n [42,] \"agnes\"       \"agnes_euclidean\"      \"6\"      \"dataframe\" \"1\"     \"0.0101\"     \"0\"     \n [43,] \"agnes\"       \"agnes_manhattan\"      \"4\"      \"dataframe\" \"1\"     \"0.0145\"    ",
        " \"0\"     \n [44,] \"agnes\"       \"agnes_manhattan\"      \"5\"      \"dataframe\" \"1\"     \"0.0142\"     \"0\"     \n [45,] \"agnes\"       \"agnes_manhattan\"      \"6\"      \"dataframe\" \"1\"     \"0.008\"      \"0\"     \n [46,] \"clara\"       \"clara_euclidean\"      \"4\"      \"dataframe\" \"1\"     \"0.0065\"     \"0\"     \n [47,] \"clara\"       \"clara_euclidean\"      \"4\"      \"dataframe\" \"2\"     \"0.0079\"     \"0\"     \n [48,] \"clara\"       \"clara_euclidean\"      \"5\"      \"dataframe\" \"1\"     \"0.0069\"     \"0.0482\"\n [49,] \"clara\"       \"clara_euclidean\"     ",
        " \"5\"      \"dataframe\" \"2\"     \"0.0077\"     \"0\"     \n [50,] \"clara\"       \"clara_euclidean\"      \"6\"      \"dataframe\" \"1\"     \"0.007\"      \"0.0482\"\n [51,] \"clara\"       \"clara_euclidean\"      \"6\"      \"dataframe\" \"2\"     \"0.0072\"     \"0\"     \n [52,] \"clara\"       \"clara_manhattan\"      \"4\"      \"dataframe\" \"1\"     \"0.0061\"     \"0\"     \n [53,] \"clara\"       \"clara_manhattan\"      \"4\"      \"dataframe\" \"2\"     \"0.0067\"     \"0\"     \n [54,] \"clara\"       \"clara_manhattan\"      \"5\"      \"dataframe\" \"1\"     \"0.0064\"    ",
        " \"0\"     \n [55,] \"clara\"       \"clara_manhattan\"      \"5\"      \"dataframe\" \"2\"     \"0.0069\"     \"0\"     \n [56,] \"clara\"       \"clara_manhattan\"      \"6\"      \"dataframe\" \"1\"     \"0.0066\"     \"0\"     \n [57,] \"clara\"       \"clara_manhattan\"      \"6\"      \"dataframe\" \"2\"     \"0.0074\"     \"0\"     \n [58,] \"daisy\"       \"daisy_manhattan\"      \"4\"      \"dataframe\" \"1\"     \"0.0066\"     \"0\"     \n [59,] \"daisy\"       \"daisy_manhattan\"      \"4\"      \"dataframe\" \"2\"     \"0.0085\"     \"0\"     \n [60,] \"daisy\"       \"daisy_manhattan\"     ",
        " \"5\"      \"dataframe\" \"1\"     \"0.0071\"     \"0\"     \n [61,] \"daisy\"       \"daisy_manhattan\"      \"5\"      \"dataframe\" \"2\"     \"0.0077\"     \"0\"     \n [62,] \"daisy\"       \"daisy_manhattan\"      \"6\"      \"dataframe\" \"1\"     \"0.0073\"     \"0\"     \n       variation_information precision recall f_measure fowlkes_mallows_index connectivity dunn     silhouette\n  [1,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"18.7381\"    \"0.3677\" \"0.39\"    \n  [2,] \"1.5304\"              \"0\"       \"0\"    \"0\"      ",
        " \"0\"                   \"18.7381\"    \"0.3677\" \"0.39\"    \n  [3,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"20.7381\"    \"0.3677\" \"0.26\"    \n  [4,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"20.7381\"    \"0.3677\" \"0.26\"    \n  [5,] \"1.2296\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"24.781\"     \"0.4613\" \"0.37\"    \n  [6,] \"1.1258\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"24.231\"     \"0.4613\" \"0.29\"    \n  [7,] \"3.4183\"             ",
        " \"0.0152\"  \"1\"    \"0.0299\"  \"0.1231\"              \"21.3429\"    \"Inf\"    \"0.18\"    \n  [8,] \"1.697\"               \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0.2217\" \"0\"       \n  [9,] \"1.5629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"25.2595\"    \"0.2135\" \"0.06\"    \n [10,] \"1.4675\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"24.2853\"    \"0.2012\" \"-0.25\"   \n [11,] \"3.0045\"              \"0.0182\"  \"1\"    \"0.0357\"  \"0.1348\"              \"27.4714\"    \"0.1276\"",
        " \"-0.02\"   \n [12,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"5.6313\"     \"0.1168\" \"-0.04\"   \n [13,] \"1.6258\"              \"0.0769\"  \"1\"    \"0.1428\"  \"0.2774\"              \"23.7548\"    \"0.3724\" \"0.36\"    \n [14,] \"1.4591\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"18.4532\"    \"0.1331\" \"0.06\"    \n [15,] \"1.4591\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"28.3837\"    \"0.2402\" \"0.25\"    \n [16,] \"1.3333\"              \"0\"       \"0\"    \"0\"       \"0\"                  ",
        " \"23.856\"     \"0.1163\" \"-0.12\"   \n [17,] \"1\"                   \"0.1667\"  \"1\"    \"0.2858\"  \"0.4082\"              \"30.731\"     \"0.2353\" \"0.01\"    \n [18,] \"0.8333\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"29.5726\"    \"0.0941\" \"-0.15\"   \n [19,] \"1.7925\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"16.2952\"    \"0.4234\" \"0.42\"    \n [20,] \"1.4675\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.531\"     \"0.515\"  \"0.35\"    \n [21,] \"1.1667\"              \"0\"      ",
        " \"0\"    \"0\"       \"0\"                   \"22.481\"     \"0.5459\" \"0.32\"    \n [22,] \"1.76\"                \"0.0625\"  \"1\"    \"0.1176\"  \"0.25\"                \"18.0714\"    \"0.3241\" \"0.29\"    \n [23,] \"1.5933\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"18.0714\"    \"0.3241\" \"0.29\"    \n [24,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"20.2381\"    \"0.3677\" \"0.31\"    \n [25,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"20.2381\"    \"0.3677\" \"0.31\"    ",
        "\n [26,] \"1.2296\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"23.0548\"    \"0.4207\" \"0.25\"    \n [27,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"23.0548\"    \"0.4207\" \"0.25\"    \n [28,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"17.7286\"    \"0.3413\" \"0.4\"     \n [29,] \"1.5304\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"17.7286\"    \"0.3413\" \"0.4\"     \n [30,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"             ",
        " \"19.7286\"    \"0.3413\" \"0.32\"    \n [31,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.7286\"    \"0.3413\" \"0.32\"    \n [32,] \"1.2296\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"22.4976\"    \"0.5396\" \"0.27\"    \n [33,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"22.4976\"    \"0.4498\" \"0.22\"    \n [34,] \"1.76\"                \"0.0625\"  \"1\"    \"0.1176\"  \"0.25\"                \"18.0619\"    \"0.2925\" \"0.29\"    \n [35,] \"1.5933\"              \"0\"      ",
        " \"0\"    \"0\"       \"0\"                   \"18.0619\"    \"0.2925\" \"0.29\"    \n [36,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"19.7286\"    \"0.3413\" \"0.32\"    \n [37,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.7286\"    \"0.3413\" \"0.32\"    \n [38,] \"1.3637\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"22.6881\"    \"0.3785\" \"0.25\"    \n [39,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"21.7286\"    \"0.3413\" \"0.22\"    ",
        "\n [40,] \"1.7925\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [41,] \"1.6258\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [42,] \"1.3008\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [43,] \"1.971\"               \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [44,] \"1.8043\"              \"0\"       \"0\"    \"0\"       \"0\"                  ",
        " \"0\"          \"0\"      \"0\"       \n [45,] \"1.3008\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [46,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"18.7381\"    \"0.3677\" \"0.39\"    \n [47,] \"1.5304\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"18.7381\"    \"0.3677\" \"0.39\"    \n [48,] \"1.5\"                 \"0\"       \"0\"    \"0\"       \"0\"                   \"21.8381\"    \"0.4\"    \"0.39\"    \n [49,] \"1.3333\"              \"0\"      ",
        " \"0\"    \"0\"       \"0\"                   \"21.8381\"    \"0.4\"    \"0.39\"    \n [50,] \"1.3333\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"23.3381\"    \"0.4\"    \"0.31\"    \n [51,] \"1.1667\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"23.3381\"    \"0.4\"    \"0.31\"    \n [52,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"17.7286\"    \"0.3413\" \"0.4\"     \n [53,] \"1.5304\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"17.7286\"    \"0.3413\" \"0.4\"     ",
        "\n [54,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"19.7286\"    \"0.3413\" \"0.32\"    \n [55,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.7286\"    \"0.3413\" \"0.32\"    \n [56,] \"1.2296\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"22.4976\"    \"0.5396\" \"0.27\"    \n [57,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"22.4976\"    \"0.5396\" \"0.27\"    \n [58,] \"2.1667\"              \"0.0345\"  \"1\"    \"0.0667\"  \"0.1857\"             ",
        " \"12.4643\"    \"0.564\"  \"0.5\"     \n [59,] \"2\"                   \"0\"       \"0\"    \"0\"       \"0\"                   \"12.4643\"    \"0.564\"  \"0.5\"     \n [60,] \"2\"                   \"0.0357\"  \"1\"    \"0.0689\"  \"0.189\"               \"14.4643\"    \"0.2909\" \"0.37\"    \n [61,] \"1.8333\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"14.4643\"    \"0.2909\" \"0.37\"    \n [62,] \"1.6376\"              \"0.0476\"  \"1\"    \"0.0909\"  \"0.2182\"              \"18.3345\"    \"0.3498\" \"0.16\"    \n       timeInternal\n  [1,] \"0.0011\"    ",
        "\n  [2,] \"0.0074\"    \n  [3,] \"0.0013\"    \n  [4,] \"0.0017\"    \n  [5,] \"0.0015\"    \n  [6,] \"0.0016\"    \n  [7,] \"0.0012\"    \n  [8,] \"0.002\"     \n  [9,] \"0.0015\"    \n [10,] \"0.0027\"    \n [11,] \"0.0012\"    \n [12,] \"0.0037\"    \n [13,] \"0.0015\"    \n [14,] \"0.0022\"    \n [15,] \"0.0015\"    \n [16,] \"0.0028\"    \n [17,] \"0.0012\"    \n [18,] \"0.0025\"    \n [19,] \"0.0014\"    \n [20,] \"0.0012\"    \n [21,] \"0.0016\"    \n [22,] \"0.0011\"    \n [23,] \"0.0012\"    \n [24,] \"0.0012\"    \n [25,] \"0.0016\"    \n [26,] \"0.0011\"    \n [27,] \"0.0012\"    ",
        "\n [28,] \"0.0011\"    \n [29,] \"0.002\"     \n [30,] \"0.0011\"    \n [31,] \"0.002\"     \n [32,] \"0.0015\"    \n [33,] \"0.0049\"    \n [34,] \"0.0024\"    \n [35,] \"0.0047\"    \n [36,] \"0.0012\"    \n [37,] \"0.0015\"    \n [38,] \"0.0011\"    \n [39,] \"0.0013\"    \n [40,] \"0\"         \n [41,] \"0\"         \n [42,] \"0\"         \n [43,] \"0\"         \n [44,] \"0\"         \n [45,] \"0\"         \n [46,] \"0.0011\"    \n [47,] \"0.0011\"    \n [48,] \"0.0011\"    \n [49,] \"0.0015\"    \n [50,] \"0.0011\"    \n [51,] \"0.0011\"    \n [52,] \"0.0011\"    \n [53,] \"0.0012\"    ",
        "\n [54,] \"0.0011\"    \n [55,] \"0.0011\"    \n [56,] \"0.0011\"    \n [57,] \"0.0011\"    \n [58,] \"0.0011\"    \n [59,] \"0.0011\"    \n [60,] \"0.0011\"    \n [61,] \"0.0012\"    \n [62,] \"0.0012\"    \n [ reached getOption(\"max.print\") -- omitted 91 rows ]\n\n$hasInternalMetrics\n[1] TRUE\n\n$hasExternalMetrics\n[1] TRUE\n\n$algorithms_execute\n [1] \"fuzzy_cm\"    \"fuzzy_gg\"    \"fuzzy_gk\"    \"hclust\"      \"apclusterK\"  \"agnes\"       \"clara\"       \"daisy\"      \n [9] \"diana\"       \"fanny\"       \"mona\"        \"pam\"         \"gmm\"         \"kmeans_arma\"",
        " \"kmeans_rcpp\" \"mini_kmeans\"\n[17] \"gama\"        \"pvclust\"    \n\n$measures_execute\n [1] \"fuzzy_cm\"             \"fuzzy_gg\"             \"fuzzy_gk\"             \"hclust_euclidean\"    \n [5] \"apclusterK_euclidean\" \"apclusterK_manhattan\" \"apclusterK_minkowski\" \"agnes_euclidean\"     \n [9] \"agnes_manhattan\"      \"clara_euclidean\"      \"clara_manhattan\"      \"daisy_manhattan\"     \n[13] \"daisy_gower\"          \"daisy_euclidean\"      \"diana_euclidean\"      \"fanny_euclidean\"     \n[17] \"fanny_manhattan\"      \"pam_euclidean\"       ",
        " \"pam_manhattan\"        \"mona\"                \n[21] \"gmm_euclidean\"        \"gmm_manhattan\"        \"kmeans_arma\"          \"kmeans_rcpp\"         \n[25] \"mini_kmeans\"          \"gama_euclidean\"       \"pvclust_euclidean\"    \"pvclust_correlation\" \n\n$tableExternal\n% latex table generated in R 3.6.3 by xtable 1.8-4 package\n% Wed Apr 15 17:37:35 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rllllllllllll}\n  \\hline\n & Algorithm & Distance & Clusters & Dataset & Ranking & timeExternal & entropy & variation\\_information & precision & recall & f\\_measure & fowlkes\\_mallows\\_index \\\\ \n  \\hline\n1 & pvclust & pvclust\\_euclidean & 4 & dataframe & 1 & 3.004 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  2 & pvclust & pvclust\\_euclidean & 5 & dataframe & 1 & 3.0337 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  3 & pvclust & pvclust\\_euclidean & 6 & dataframe & 1 & 2.98 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  4 & pvclust & pvclust\\_correlation & 4 & dataframe & 1 & 3.422 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  5 & pvclust & pvclust\\_correlation & 4 & dataframe & 2 & 3.6321 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  6 & pvclust & pvclust\\_correlation & 5 & dataframe & 1 & 3.3628 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  7 & pvclust & pvclust\\_correlation & 5 & dataframe & 2 & 3.4335 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  8 & pvclust & pvclust\\_correlation & 6 & dataframe & 1 & 3.3904 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  9 & pvclust & pvclust\\_correlation & 6 & dataframe & 2 & 3.4584 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \n  10 &  &  &  &  &  &  &  &  &  &  &  &  \\\\ \n  11 &  &  &  &  &  &  &  &  &  &  &  &  \\\\ \n  12 &  &  &  &  &  &  &  &  &  &  &  &  \\\\ \n   \\hline\n\\end{tabular}\n\\end{table}\n",
        "\n$tableInternal\n% latex table generated in R 3.6.3 by xtable 1.8-4 package\n% Wed Apr 15 17:37:35 2020\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rlllllllll}\n  \\hline\n & Algorithm & Distance & Clusters & Dataset & Ranking & timeInternal & connectivity & dunn & silhouette \\\\ \n  \\hline\n1 & pvclust & pvclust\\_euclidean & 4 & dataframe & 1 & 0 & 0 & 0 & 0 \\\\ \n  2 & pvclust & pvclust\\_euclidean & 5 & dataframe & 1 & 0 & 0 & 0 & 0 \\\\ \n  3 & pvclust & pvclust\\_euclidean & 6 & dataframe & 1 & 0 & 0 & 0 & 0 \\\\ \n  4 & pvclust & pvclust\\_correlation & 4 & dataframe & 1 & 0 & 0 & 0 & 0 \\\\ \n  5 & pvclust & pvclust\\_correlation & 4 & dataframe & 2 & 0 & 0 & 0 & 0 \\\\ \n  6 & pvclust & pvclust\\_correlation & 5 & dataframe & 1 & 0 & 0 & 0 & 0 \\\\ \n  7 & pvclust & pvclust\\_correlation & 5 & dataframe & 2 & 0 & 0 & 0 & 0 \\\\ \n  8 & pvclust & pvclust\\_correlation & 6 & dataframe & 1 & 0 & 0 & 0 & 0 \\\\ \n  9 & pvclust & pvclust\\_correlation & 6 & dataframe & 2 & 0 & 0 & 0 & 0 \\\\ \n  10 &  &  &  &  &  &  &  &  &  \\\\ \n  11 &  &  &  &  &  &  &  &  &  \\\\ \n  12 &  &  &  &  &  &  &  &  &  \\\\ \n   \\hline\n\\end{tabular}\n\\end{table}\n",
        "\n",
        "> ",
        "dplyr::select(df, c(metric))",
        "Error: `select()` doesn't handle lists.\n[90mRun `rlang::last_error()` to see where the error occurred.[39m\n",
        "> ",
        "dplyr::filter(df, c(metric))",
        "Error in UseMethod(\"filter_\") : \n  no applicable method for 'filter_' applied to an object of class \"list\"\n",
        "> ",
        "dplyr::select(df)",
        "Error: `select()` doesn't handle lists.\n[90mRun `rlang::last_error()` to see where the error occurred.[39m\n",
        "> ",
        "dplyr::select(df$result)",
        "Error in UseMethod(\"select_\") : \n  no applicable method for 'select_' applied to an object of class \"c('matrix', 'character')\"\n",
        "> ",
        "dplyr::select(df$result, c(metric))",
        "Error in UseMethod(\"select_\") : \n  no applicable method for 'select_' applied to an object of class \"c('matrix', 'character')\"\n",
        "> ",
        "dplyr::select(df$result, metric)",
        "Error in UseMethod(\"select_\") : \n  no applicable method for 'select_' applied to an object of class \"c('matrix', 'character')\"\n",
        "> ",
        "dplyr::select(df$result, c('variation_information'))",
        "Error in UseMethod(\"select_\") : \n  no applicable method for 'select_' applied to an object of class \"c('matrix', 'character')\"\n",
        "> ",
        "dplyr::select(df$result, c(\"variation_information\"))",
        "Error in UseMethod(\"select_\") : \n  no applicable method for 'select_' applied to an object of class \"c('matrix', 'character')\"\n",
        "> ",
        "df$result",
        "       Algorithm     Distance               Clusters Dataset     Ranking timeExternal entropy \n  [1,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"4\"      \"dataframe\" \"1\"     \"0.0347\"     \"0\"     \n  [2,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"4\"      \"dataframe\" \"2\"     \"0.0488\"     \"0\"     \n  [3,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"5\"      \"dataframe\" \"1\"     \"0.0341\"     \"0\"     \n  [4,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"5\"      \"dataframe\" \"2\"     \"0.0355\"     \"0\"     \n  [5,] \"fuzzy_cm\"    \"fuzzy_cm\"            ",
        " \"6\"      \"dataframe\" \"1\"     \"0.0425\"     \"0.0482\"\n  [6,] \"fuzzy_cm\"    \"fuzzy_cm\"             \"6\"      \"dataframe\" \"2\"     \"0.0454\"     \"0\"     \n  [7,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"4\"      \"dataframe\" \"1\"     \"0.0902\"     \"0\"     \n  [8,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"4\"      \"dataframe\" \"2\"     \"0.1056\"     \"0\"     \n  [9,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"5\"      \"dataframe\" \"1\"     \"0.0876\"     \"0.0482\"\n [10,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"5\"      \"dataframe\" \"2\"     \"0.0908\"    ",
        " \"0\"     \n [11,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"6\"      \"dataframe\" \"1\"     \"0.063\"      \"0\"     \n [12,] \"fuzzy_gg\"    \"fuzzy_gg\"             \"6\"      \"dataframe\" \"2\"     \"0.1195\"     \"0\"     \n [13,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"4\"      \"dataframe\" \"1\"     \"0.1541\"     \"0\"     \n [14,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"4\"      \"dataframe\" \"2\"     \"0.2066\"     \"0\"     \n [15,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"5\"      \"dataframe\" \"1\"     \"0.1896\"     \"0.0482\"\n [16,] \"fuzzy_gk\"    \"fuzzy_gk\"            ",
        " \"5\"      \"dataframe\" \"2\"     \"0.2602\"     \"0\"     \n [17,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"6\"      \"dataframe\" \"1\"     \"0.1515\"     \"0\"     \n [18,] \"fuzzy_gk\"    \"fuzzy_gk\"             \"6\"      \"dataframe\" \"2\"     \"0.1604\"     \"0\"     \n [19,] \"hclust\"      \"hclust_euclidean\"     \"4\"      \"dataframe\" \"1\"     \"0.0127\"     \"0\"     \n [20,] \"hclust\"      \"hclust_euclidean\"     \"5\"      \"dataframe\" \"1\"     \"0.0098\"     \"0\"     \n [21,] \"hclust\"      \"hclust_euclidean\"     \"6\"      \"dataframe\" \"1\"     \"0.0075\"    ",
        " \"0\"     \n [22,] \"apclusterK\"  \"apclusterK_euclidean\" \"4\"      \"dataframe\" \"1\"     \"0.0953\"     \"0\"     \n [23,] \"apclusterK\"  \"apclusterK_euclidean\" \"4\"      \"dataframe\" \"2\"     \"0.1558\"     \"0\"     \n [24,] \"apclusterK\"  \"apclusterK_euclidean\" \"5\"      \"dataframe\" \"1\"     \"0.0287\"     \"0\"     \n [25,] \"apclusterK\"  \"apclusterK_euclidean\" \"5\"      \"dataframe\" \"2\"     \"0.0335\"     \"0\"     \n [26,] \"apclusterK\"  \"apclusterK_euclidean\" \"6\"      \"dataframe\" \"1\"     \"0.046\"      \"0\"     \n [27,] \"apclusterK\"  \"apclusterK_euclidean\"",
        " \"6\"      \"dataframe\" \"2\"     \"0.0643\"     \"0\"     \n [28,] \"apclusterK\"  \"apclusterK_manhattan\" \"4\"      \"dataframe\" \"1\"     \"0.0289\"     \"0\"     \n [29,] \"apclusterK\"  \"apclusterK_manhattan\" \"4\"      \"dataframe\" \"2\"     \"0.0354\"     \"0\"     \n [30,] \"apclusterK\"  \"apclusterK_manhattan\" \"5\"      \"dataframe\" \"1\"     \"0.0289\"     \"0\"     \n [31,] \"apclusterK\"  \"apclusterK_manhattan\" \"5\"      \"dataframe\" \"2\"     \"0.0298\"     \"0\"     \n [32,] \"apclusterK\"  \"apclusterK_manhattan\" \"6\"      \"dataframe\" \"1\"     \"0.0283\"    ",
        " \"0\"     \n [33,] \"apclusterK\"  \"apclusterK_manhattan\" \"6\"      \"dataframe\" \"2\"     \"0.035\"      \"0\"     \n [34,] \"apclusterK\"  \"apclusterK_minkowski\" \"4\"      \"dataframe\" \"1\"     \"0.0246\"     \"0\"     \n [35,] \"apclusterK\"  \"apclusterK_minkowski\" \"4\"      \"dataframe\" \"2\"     \"0.0315\"     \"0\"     \n [36,] \"apclusterK\"  \"apclusterK_minkowski\" \"5\"      \"dataframe\" \"1\"     \"0.0288\"     \"0\"     \n [37,] \"apclusterK\"  \"apclusterK_minkowski\" \"5\"      \"dataframe\" \"2\"     \"0.0302\"     \"0\"     \n [38,] \"apclusterK\"  \"apclusterK_minkowski\"",
        " \"6\"      \"dataframe\" \"1\"     \"0.0311\"     \"0\"     \n [39,] \"apclusterK\"  \"apclusterK_minkowski\" \"6\"      \"dataframe\" \"2\"     \"0.0756\"     \"0\"     \n [40,] \"agnes\"       \"agnes_euclidean\"      \"4\"      \"dataframe\" \"1\"     \"0.0201\"     \"0\"     \n [41,] \"agnes\"       \"agnes_euclidean\"      \"5\"      \"dataframe\" \"1\"     \"0.0131\"     \"0\"     \n [42,] \"agnes\"       \"agnes_euclidean\"      \"6\"      \"dataframe\" \"1\"     \"0.0101\"     \"0\"     \n [43,] \"agnes\"       \"agnes_manhattan\"      \"4\"      \"dataframe\" \"1\"     \"0.0145\"    ",
        " \"0\"     \n [44,] \"agnes\"       \"agnes_manhattan\"      \"5\"      \"dataframe\" \"1\"     \"0.0142\"     \"0\"     \n [45,] \"agnes\"       \"agnes_manhattan\"      \"6\"      \"dataframe\" \"1\"     \"0.008\"      \"0\"     \n [46,] \"clara\"       \"clara_euclidean\"      \"4\"      \"dataframe\" \"1\"     \"0.0065\"     \"0\"     \n [47,] \"clara\"       \"clara_euclidean\"      \"4\"      \"dataframe\" \"2\"     \"0.0079\"     \"0\"     \n [48,] \"clara\"       \"clara_euclidean\"      \"5\"      \"dataframe\" \"1\"     \"0.0069\"     \"0.0482\"\n [49,] \"clara\"       \"clara_euclidean\"     ",
        " \"5\"      \"dataframe\" \"2\"     \"0.0077\"     \"0\"     \n [50,] \"clara\"       \"clara_euclidean\"      \"6\"      \"dataframe\" \"1\"     \"0.007\"      \"0.0482\"\n [51,] \"clara\"       \"clara_euclidean\"      \"6\"      \"dataframe\" \"2\"     \"0.0072\"     \"0\"     \n [52,] \"clara\"       \"clara_manhattan\"      \"4\"      \"dataframe\" \"1\"     \"0.0061\"     \"0\"     \n [53,] \"clara\"       \"clara_manhattan\"      \"4\"      \"dataframe\" \"2\"     \"0.0067\"     \"0\"     \n [54,] \"clara\"       \"clara_manhattan\"      \"5\"      \"dataframe\" \"1\"     \"0.0064\"    ",
        " \"0\"     \n [55,] \"clara\"       \"clara_manhattan\"      \"5\"      \"dataframe\" \"2\"     \"0.0069\"     \"0\"     \n [56,] \"clara\"       \"clara_manhattan\"      \"6\"      \"dataframe\" \"1\"     \"0.0066\"     \"0\"     \n [57,] \"clara\"       \"clara_manhattan\"      \"6\"      \"dataframe\" \"2\"     \"0.0074\"     \"0\"     \n [58,] \"daisy\"       \"daisy_manhattan\"      \"4\"      \"dataframe\" \"1\"     \"0.0066\"     \"0\"     \n [59,] \"daisy\"       \"daisy_manhattan\"      \"4\"      \"dataframe\" \"2\"     \"0.0085\"     \"0\"     \n [60,] \"daisy\"       \"daisy_manhattan\"     ",
        " \"5\"      \"dataframe\" \"1\"     \"0.0071\"     \"0\"     \n [61,] \"daisy\"       \"daisy_manhattan\"      \"5\"      \"dataframe\" \"2\"     \"0.0077\"     \"0\"     \n [62,] \"daisy\"       \"daisy_manhattan\"      \"6\"      \"dataframe\" \"1\"     \"0.0073\"     \"0\"     \n       variation_information precision recall f_measure fowlkes_mallows_index connectivity dunn     silhouette\n  [1,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"18.7381\"    \"0.3677\" \"0.39\"    \n  [2,] \"1.5304\"              \"0\"       \"0\"    \"0\"      ",
        " \"0\"                   \"18.7381\"    \"0.3677\" \"0.39\"    \n  [3,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"20.7381\"    \"0.3677\" \"0.26\"    \n  [4,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"20.7381\"    \"0.3677\" \"0.26\"    \n  [5,] \"1.2296\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"24.781\"     \"0.4613\" \"0.37\"    \n  [6,] \"1.1258\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"24.231\"     \"0.4613\" \"0.29\"    \n  [7,] \"3.4183\"             ",
        " \"0.0152\"  \"1\"    \"0.0299\"  \"0.1231\"              \"21.3429\"    \"Inf\"    \"0.18\"    \n  [8,] \"1.697\"               \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0.2217\" \"0\"       \n  [9,] \"1.5629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"25.2595\"    \"0.2135\" \"0.06\"    \n [10,] \"1.4675\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"24.2853\"    \"0.2012\" \"-0.25\"   \n [11,] \"3.0045\"              \"0.0182\"  \"1\"    \"0.0357\"  \"0.1348\"              \"27.4714\"    \"0.1276\"",
        " \"-0.02\"   \n [12,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"5.6313\"     \"0.1168\" \"-0.04\"   \n [13,] \"1.6258\"              \"0.0769\"  \"1\"    \"0.1428\"  \"0.2774\"              \"23.7548\"    \"0.3724\" \"0.36\"    \n [14,] \"1.4591\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"18.4532\"    \"0.1331\" \"0.06\"    \n [15,] \"1.4591\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"28.3837\"    \"0.2402\" \"0.25\"    \n [16,] \"1.3333\"              \"0\"       \"0\"    \"0\"       \"0\"                  ",
        " \"23.856\"     \"0.1163\" \"-0.12\"   \n [17,] \"1\"                   \"0.1667\"  \"1\"    \"0.2858\"  \"0.4082\"              \"30.731\"     \"0.2353\" \"0.01\"    \n [18,] \"0.8333\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"29.5726\"    \"0.0941\" \"-0.15\"   \n [19,] \"1.7925\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"16.2952\"    \"0.4234\" \"0.42\"    \n [20,] \"1.4675\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.531\"     \"0.515\"  \"0.35\"    \n [21,] \"1.1667\"              \"0\"      ",
        " \"0\"    \"0\"       \"0\"                   \"22.481\"     \"0.5459\" \"0.32\"    \n [22,] \"1.76\"                \"0.0625\"  \"1\"    \"0.1176\"  \"0.25\"                \"18.0714\"    \"0.3241\" \"0.29\"    \n [23,] \"1.5933\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"18.0714\"    \"0.3241\" \"0.29\"    \n [24,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"20.2381\"    \"0.3677\" \"0.31\"    \n [25,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"20.2381\"    \"0.3677\" \"0.31\"    ",
        "\n [26,] \"1.2296\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"23.0548\"    \"0.4207\" \"0.25\"    \n [27,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"23.0548\"    \"0.4207\" \"0.25\"    \n [28,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"17.7286\"    \"0.3413\" \"0.4\"     \n [29,] \"1.5304\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"17.7286\"    \"0.3413\" \"0.4\"     \n [30,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"             ",
        " \"19.7286\"    \"0.3413\" \"0.32\"    \n [31,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.7286\"    \"0.3413\" \"0.32\"    \n [32,] \"1.2296\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"22.4976\"    \"0.5396\" \"0.27\"    \n [33,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"22.4976\"    \"0.4498\" \"0.22\"    \n [34,] \"1.76\"                \"0.0625\"  \"1\"    \"0.1176\"  \"0.25\"                \"18.0619\"    \"0.2925\" \"0.29\"    \n [35,] \"1.5933\"              \"0\"      ",
        " \"0\"    \"0\"       \"0\"                   \"18.0619\"    \"0.2925\" \"0.29\"    \n [36,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"19.7286\"    \"0.3413\" \"0.32\"    \n [37,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.7286\"    \"0.3413\" \"0.32\"    \n [38,] \"1.3637\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"22.6881\"    \"0.3785\" \"0.25\"    \n [39,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"21.7286\"    \"0.3413\" \"0.22\"    ",
        "\n [40,] \"1.7925\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [41,] \"1.6258\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [42,] \"1.3008\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [43,] \"1.971\"               \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [44,] \"1.8043\"              \"0\"       \"0\"    \"0\"       \"0\"                  ",
        " \"0\"          \"0\"      \"0\"       \n [45,] \"1.3008\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"0\"          \"0\"      \"0\"       \n [46,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"18.7381\"    \"0.3677\" \"0.39\"    \n [47,] \"1.5304\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"18.7381\"    \"0.3677\" \"0.39\"    \n [48,] \"1.5\"                 \"0\"       \"0\"    \"0\"       \"0\"                   \"21.8381\"    \"0.4\"    \"0.39\"    \n [49,] \"1.3333\"              \"0\"      ",
        " \"0\"    \"0\"       \"0\"                   \"21.8381\"    \"0.4\"    \"0.39\"    \n [50,] \"1.3333\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"23.3381\"    \"0.4\"    \"0.31\"    \n [51,] \"1.1667\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"23.3381\"    \"0.4\"    \"0.31\"    \n [52,] \"1.697\"               \"0.0667\"  \"1\"    \"0.1251\"  \"0.2582\"              \"17.7286\"    \"0.3413\" \"0.4\"     \n [53,] \"1.5304\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"17.7286\"    \"0.3413\" \"0.4\"     ",
        "\n [54,] \"1.5304\"              \"0.0714\"  \"1\"    \"0.1333\"  \"0.2673\"              \"19.7286\"    \"0.3413\" \"0.32\"    \n [55,] \"1.3637\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"19.7286\"    \"0.3413\" \"0.32\"    \n [56,] \"1.2296\"              \"0.1\"     \"1\"    \"0.1818\"  \"0.3162\"              \"22.4976\"    \"0.5396\" \"0.27\"    \n [57,] \"1.0629\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"22.4976\"    \"0.5396\" \"0.27\"    \n [58,] \"2.1667\"              \"0.0345\"  \"1\"    \"0.0667\"  \"0.1857\"             ",
        " \"12.4643\"    \"0.564\"  \"0.5\"     \n [59,] \"2\"                   \"0\"       \"0\"    \"0\"       \"0\"                   \"12.4643\"    \"0.564\"  \"0.5\"     \n [60,] \"2\"                   \"0.0357\"  \"1\"    \"0.0689\"  \"0.189\"               \"14.4643\"    \"0.2909\" \"0.37\"    \n [61,] \"1.8333\"              \"0\"       \"0\"    \"0\"       \"0\"                   \"14.4643\"    \"0.2909\" \"0.37\"    \n [62,] \"1.6376\"              \"0.0476\"  \"1\"    \"0.0909\"  \"0.2182\"              \"18.3345\"    \"0.3498\" \"0.16\"    \n       timeInternal\n  [1,] \"0.0011\"    ",
        "\n  [2,] \"0.0074\"    \n  [3,] \"0.0013\"    \n  [4,] \"0.0017\"    \n  [5,] \"0.0015\"    \n  [6,] \"0.0016\"    \n  [7,] \"0.0012\"    \n  [8,] \"0.002\"     \n  [9,] \"0.0015\"    \n [10,] \"0.0027\"    \n [11,] \"0.0012\"    \n [12,] \"0.0037\"    \n [13,] \"0.0015\"    \n [14,] \"0.0022\"    \n [15,] \"0.0015\"    \n [16,] \"0.0028\"    \n [17,] \"0.0012\"    \n [18,] \"0.0025\"    \n [19,] \"0.0014\"    \n [20,] \"0.0012\"    \n [21,] \"0.0016\"    \n [22,] \"0.0011\"    \n [23,] \"0.0012\"    \n [24,] \"0.0012\"    \n [25,] \"0.0016\"    \n [26,] \"0.0011\"    \n [27,] \"0.0012\"    ",
        "\n [28,] \"0.0011\"    \n [29,] \"0.002\"     \n [30,] \"0.0011\"    \n [31,] \"0.002\"     \n [32,] \"0.0015\"    \n [33,] \"0.0049\"    \n [34,] \"0.0024\"    \n [35,] \"0.0047\"    \n [36,] \"0.0012\"    \n [37,] \"0.0015\"    \n [38,] \"0.0011\"    \n [39,] \"0.0013\"    \n [40,] \"0\"         \n [41,] \"0\"         \n [42,] \"0\"         \n [43,] \"0\"         \n [44,] \"0\"         \n [45,] \"0\"         \n [46,] \"0.0011\"    \n [47,] \"0.0011\"    \n [48,] \"0.0011\"    \n [49,] \"0.0015\"    \n [50,] \"0.0011\"    \n [51,] \"0.0011\"    \n [52,] \"0.0011\"    \n [53,] \"0.0012\"    ",
        "\n [54,] \"0.0011\"    \n [55,] \"0.0011\"    \n [56,] \"0.0011\"    \n [57,] \"0.0011\"    \n [58,] \"0.0011\"    \n [59,] \"0.0011\"    \n [60,] \"0.0011\"    \n [61,] \"0.0012\"    \n [62,] \"0.0012\"    \n [ reached getOption(\"max.print\") -- omitted 91 rows ]\n",
        "> ",
        "dplyr::select(df$result, c(\"Algorithm\"))",
        "Error in UseMethod(\"select_\") : \n  no applicable method for 'select_' applied to an object of class \"c('matrix', 'character')\"\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), c(\"Algorithm\"))",
        "      Algorithm\n1      fuzzy_cm\n2      fuzzy_cm\n3      fuzzy_cm\n4      fuzzy_cm\n5      fuzzy_cm\n6      fuzzy_cm\n7      fuzzy_gg\n8      fuzzy_gg\n9      fuzzy_gg\n10     fuzzy_gg\n11     fuzzy_gg\n12     fuzzy_gg\n13     fuzzy_gk\n14     fuzzy_gk\n15     fuzzy_gk\n16     fuzzy_gk\n17     fuzzy_gk\n18     fuzzy_gk\n19       hclust\n20       hclust\n21       hclust\n22   apclusterK\n23   apclusterK\n24   apclusterK\n25   apclusterK\n26   apclusterK\n27   apclusterK\n28   apclusterK\n29   apclusterK\n30   apclusterK\n31   apclusterK\n32 ",
        "  apclusterK\n33   apclusterK\n34   apclusterK\n35   apclusterK\n36   apclusterK\n37   apclusterK\n38   apclusterK\n39   apclusterK\n40        agnes\n41        agnes\n42        agnes\n43        agnes\n44        agnes\n45        agnes\n46        clara\n47        clara\n48        clara\n49        clara\n50        clara\n51        clara\n52        clara\n53        clara\n54        clara\n55        clara\n56        clara\n57        clara\n58        daisy\n59        daisy\n60        daisy\n61        daisy\n62        daisy\n63        daisy\n64 ",
        "       daisy\n65        daisy\n66        daisy\n67        daisy\n68        daisy\n69        daisy\n70        daisy\n71        daisy\n72        daisy\n73        daisy\n74        daisy\n75        daisy\n76        diana\n77        diana\n78        diana\n79        fanny\n80        fanny\n81        fanny\n82        fanny\n83        fanny\n84        fanny\n85        fanny\n86        fanny\n87        fanny\n88        fanny\n89        fanny\n90        fanny\n91         mona\n92         mona\n93         mona\n94         mona\n95         mona\n96 ",
        "        mona\n97          pam\n98          pam\n99          pam\n100         pam\n101         pam\n102         pam\n103         pam\n104         pam\n105         pam\n106         pam\n107         pam\n108         pam\n109         gmm\n110         gmm\n111         gmm\n112         gmm\n113         gmm\n114         gmm\n115         gmm\n116         gmm\n117         gmm\n118         gmm\n119         gmm\n120         gmm\n121 kmeans_arma\n122 kmeans_arma\n123 kmeans_arma\n124 kmeans_arma\n125 kmeans_arma\n126 kmeans_arma\n127 kmeans_rcpp\n128",
        " kmeans_rcpp\n129 kmeans_rcpp\n130 kmeans_rcpp\n131 kmeans_rcpp\n132 kmeans_rcpp\n133 mini_kmeans\n134 mini_kmeans\n135 mini_kmeans\n136 mini_kmeans\n137 mini_kmeans\n138 mini_kmeans\n139        gama\n140        gama\n141        gama\n142        gama\n143        gama\n144        gama\n145     pvclust\n146     pvclust\n147     pvclust\n148     pvclust\n149     pvclust\n150     pvclust\n151     pvclust\n152     pvclust\n153     pvclust\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), c(metric))",
        "Note: Using an external vector in selections is ambiguous.\n[34mℹ[39m Use `all_of(metric)` instead of `metric` to silence this message.\n[34mℹ[39m See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\n[90mThis message is displayed once per session.[39m\n    variation_information\n1                   1.697\n2                  1.5304\n3                  1.5304\n4                  1.3637\n5                  1.2296\n6                  1.1258\n7                  3.4183\n8                   1.697\n9  ",
        "                1.5629\n10                 1.4675\n11                 3.0045\n12                 1.0629\n13                 1.6258\n14                 1.4591\n15                 1.4591\n16                 1.3333\n17                      1\n18                 0.8333\n19                 1.7925\n20                 1.4675\n21                 1.1667\n22                   1.76\n23                 1.5933\n24                 1.5304\n25                 1.3637\n26                 1.2296\n27                 1.0629\n28                  1.697",
        "\n29                 1.5304\n30                 1.5304\n31                 1.3637\n32                 1.2296\n33                 1.0629\n34                   1.76\n35                 1.5933\n36                 1.5304\n37                 1.3637\n38                 1.3637\n39                 1.0629\n40                 1.7925\n41                 1.6258\n42                 1.3008\n43                  1.971\n44                 1.8043\n45                 1.3008\n46                  1.697\n47                 1.5304\n48                    1.5",
        "\n49                 1.3333\n50                 1.3333\n51                 1.1667\n52                  1.697\n53                 1.5304\n54                 1.5304\n55                 1.3637\n56                 1.2296\n57                 1.0629\n58                 2.1667\n59                      2\n60                      2\n61                 1.8333\n62                 1.6376\n63                  1.471\n64                 2.1667\n65                      2\n66                      2\n67                 1.8333\n68                 1.6376",
        "\n69                  1.471\n70                 2.1667\n71                      2\n72                 1.7925\n73                 1.6258\n74                 1.6258\n75                 1.4591\n76                  1.697\n77                 1.2925\n78                 1.1258\n79                  1.697\n80                 1.5304\n81                 1.6341\n82                 1.4675\n83                      0\n84                      0\n85                  1.697\n86                 1.5304\n87                 1.6341\n88                 1.4675",
        "\n89                      0\n90                      0\n91                      0\n92                      0\n93                      0\n94                      0\n95                      0\n96                      0\n97                   1.76\n98                 1.5933\n99                 1.5629\n100                1.3962\n101                1.3333\n102                1.1667\n103                 1.697\n104                1.5304\n105                1.5304\n106                1.3637\n107                1.2296\n108                1.0629",
        "\n109                 1.971\n110                1.8043\n111                1.3962\n112                1.2296\n113                1.3333\n114                1.1667\n115                 1.971\n116                1.8043\n117                1.3962\n118                1.2296\n119                1.3333\n120                1.1667\n121                     0\n122                     0\n123                     0\n124                     0\n125                     0\n126                     0\n127                 1.697\n128                1.5304",
        "\n129                 1.697\n130                1.5304\n131                 1.697\n132                1.5304\n133                     0\n134                     0\n135                     0\n136                     0\n137                     0\n138                     0\n139                     0\n140                     0\n141                     0\n142                     0\n143                     0\n144                     0\n145                     0\n146                     0\n147                     0\n148                     0",
        "\n149                     0\n150                     0\n151                     0\n152                     0\n153                     0\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric)",
        "    variation_information\n1                   1.697\n2                  1.5304\n3                  1.5304\n4                  1.3637\n5                  1.2296\n6                  1.1258\n7                  3.4183\n8                   1.697\n9                  1.5629\n10                 1.4675\n11                 3.0045\n12                 1.0629\n13                 1.6258\n14                 1.4591\n15                 1.4591\n16                 1.3333\n17                      1\n18                 0.8333\n19                 1.7925",
        "\n20                 1.4675\n21                 1.1667\n22                   1.76\n23                 1.5933\n24                 1.5304\n25                 1.3637\n26                 1.2296\n27                 1.0629\n28                  1.697\n29                 1.5304\n30                 1.5304\n31                 1.3637\n32                 1.2296\n33                 1.0629\n34                   1.76\n35                 1.5933\n36                 1.5304\n37                 1.3637\n38                 1.3637\n39                 1.0629",
        "\n40                 1.7925\n41                 1.6258\n42                 1.3008\n43                  1.971\n44                 1.8043\n45                 1.3008\n46                  1.697\n47                 1.5304\n48                    1.5\n49                 1.3333\n50                 1.3333\n51                 1.1667\n52                  1.697\n53                 1.5304\n54                 1.5304\n55                 1.3637\n56                 1.2296\n57                 1.0629\n58                 2.1667\n59                      2",
        "\n60                      2\n61                 1.8333\n62                 1.6376\n63                  1.471\n64                 2.1667\n65                      2\n66                      2\n67                 1.8333\n68                 1.6376\n69                  1.471\n70                 2.1667\n71                      2\n72                 1.7925\n73                 1.6258\n74                 1.6258\n75                 1.4591\n76                  1.697\n77                 1.2925\n78                 1.1258\n79                  1.697",
        "\n80                 1.5304\n81                 1.6341\n82                 1.4675\n83                      0\n84                      0\n85                  1.697\n86                 1.5304\n87                 1.6341\n88                 1.4675\n89                      0\n90                      0\n91                      0\n92                      0\n93                      0\n94                      0\n95                      0\n96                      0\n97                   1.76\n98                 1.5933\n99                 1.5629",
        "\n100                1.3962\n101                1.3333\n102                1.1667\n103                 1.697\n104                1.5304\n105                1.5304\n106                1.3637\n107                1.2296\n108                1.0629\n109                 1.971\n110                1.8043\n111                1.3962\n112                1.2296\n113                1.3333\n114                1.1667\n115                 1.971\n116                1.8043\n117                1.3962\n118                1.2296\n119                1.3333",
        "\n120                1.1667\n121                     0\n122                     0\n123                     0\n124                     0\n125                     0\n126                     0\n127                 1.697\n128                1.5304\n129                 1.697\n130                1.5304\n131                 1.697\n132                1.5304\n133                     0\n134                     0\n135                     0\n136                     0\n137                     0\n138                     0\n139                     0",
        "\n140                     0\n141                     0\n142                     0\n143                     0\n144                     0\n145                     0\n146                     0\n147                     0\n148                     0\n149                     0\n150                     0\n151                     0\n152                     0\n153                     0\n",
        "> ",
        "max(dplyr::select(as.data.frame(df$result), metric))",
        "Error in FUN(X[[i]], ...) : \n  only defined on a data frame with all numeric variables\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric) + summary(max = max(metric))",
        "Error in is.factor(object) : \n  el argumento \"object\" está ausente, sin valor por omisión\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric) + summary(maximo = max(metric))",
        "Error in is.factor(object) : \n  el argumento \"object\" está ausente, sin valor por omisión\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric)",
        "    variation_information\n1                   1.697\n2                  1.5304\n3                  1.5304\n4                  1.3637\n5                  1.2296\n6                  1.1258\n7                  3.4183\n8                   1.697\n9                  1.5629\n10                 1.4675\n11                 3.0045\n12                 1.0629\n13                 1.6258\n14                 1.4591\n15                 1.4591\n16                 1.3333\n17                      1\n18                 0.8333\n19                 1.7925",
        "\n20                 1.4675\n21                 1.1667\n22                   1.76\n23                 1.5933\n24                 1.5304\n25                 1.3637\n26                 1.2296\n27                 1.0629\n28                  1.697\n29                 1.5304\n30                 1.5304\n31                 1.3637\n32                 1.2296\n33                 1.0629\n34                   1.76\n35                 1.5933\n36                 1.5304\n37                 1.3637\n38                 1.3637\n39                 1.0629",
        "\n40                 1.7925\n41                 1.6258\n42                 1.3008\n43                  1.971\n44                 1.8043\n45                 1.3008\n46                  1.697\n47                 1.5304\n48                    1.5\n49                 1.3333\n50                 1.3333\n51                 1.1667\n52                  1.697\n53                 1.5304\n54                 1.5304\n55                 1.3637\n56                 1.2296\n57                 1.0629\n58                 2.1667\n59                      2",
        "\n60                      2\n61                 1.8333\n62                 1.6376\n63                  1.471\n64                 2.1667\n65                      2\n66                      2\n67                 1.8333\n68                 1.6376\n69                  1.471\n70                 2.1667\n71                      2\n72                 1.7925\n73                 1.6258\n74                 1.6258\n75                 1.4591\n76                  1.697\n77                 1.2925\n78                 1.1258\n79                  1.697",
        "\n80                 1.5304\n81                 1.6341\n82                 1.4675\n83                      0\n84                      0\n85                  1.697\n86                 1.5304\n87                 1.6341\n88                 1.4675\n89                      0\n90                      0\n91                      0\n92                      0\n93                      0\n94                      0\n95                      0\n96                      0\n97                   1.76\n98                 1.5933\n99                 1.5629",
        "\n100                1.3962\n101                1.3333\n102                1.1667\n103                 1.697\n104                1.5304\n105                1.5304\n106                1.3637\n107                1.2296\n108                1.0629\n109                 1.971\n110                1.8043\n111                1.3962\n112                1.2296\n113                1.3333\n114                1.1667\n115                 1.971\n116                1.8043\n117                1.3962\n118                1.2296\n119                1.3333",
        "\n120                1.1667\n121                     0\n122                     0\n123                     0\n124                     0\n125                     0\n126                     0\n127                 1.697\n128                1.5304\n129                 1.697\n130                1.5304\n131                 1.697\n132                1.5304\n133                     0\n134                     0\n135                     0\n136                     0\n137                     0\n138                     0\n139                     0",
        "\n140                     0\n141                     0\n142                     0\n143                     0\n144                     0\n145                     0\n146                     0\n147                     0\n148                     0\n149                     0\n150                     0\n151                     0\n152                     0\n153                     0\n",
        "> ",
        "max(dplyr::select(as.data.frame(df$result), metric))",
        "Error in FUN(X[[i]], ...) : \n  only defined on a data frame with all numeric variables\n",
        "> ",
        "max(as.numeric(dplyr::select(as.data.frame(df$result), metric)))",
        "Error: 'list' object cannot be coerced to type 'double'\n",
        "> ",
        "max(dplyr::select(as.data.frame(df$result), metric), na.rm = TRUE)",
        "Error in FUN(X[[i]], ...) : \n  only defined on a data frame with all numeric variables\n",
        "> ",
        "df_prueba <- as.data.frame(df)",
        "Error in (function (..., row.names = NULL, check.rows = FALSE, check.names = TRUE,  : \n  arguments imply differing number of rows: 153, 1, 18, 28, 12\n",
        "> ",
        "df_prueba <- as.data.frame(df$result)",
        "> ",
        "max(dplyr::select(df_prueba, metric), na.rm = TRUE)",
        "Error in FUN(X[[i]], ...) : \n  only defined on a data frame with all numeric variables\n",
        "> ",
        "result <- dplyr::select(df_prueba, metric)",
        "> ",
        "maximo <- max(result)",
        "Error in FUN(X[[i]], ...) : \n  only defined on a data frame with all numeric variables\n",
        "> ",
        "maximo <- max(result[1,])",
        "Error in Summary.factor(23L, na.rm = FALSE) : \n  ‘max’ not meaningful for factors\n",
        "> ",
        "maximo <- max(result[1,], na.rm = TRUE)",
        "Error in Summary.factor(23L, na.rm = TRUE) : \n  ‘max’ not meaningful for factors\n",
        "> ",
        "colMax(result)",
        "Error in colMax(result) : no se pudo encontrar la función \"colMax\"\n",
        "> ",
        "colMax(unlist(result))",
        "Error in colMax(unlist(result)) : \n  no se pudo encontrar la función \"colMax\"\n",
        "> ",
        "max(unlist(result))",
        "Error in Summary.factor(c(variation_information1 = 23L, variation_information2 = 17L,  : \n  ‘max’ not meaningful for factors\n",
        "> ",
        "max(unlist(as.numeric(result)))",
        "Error in unlist(as.numeric(result)) : \n  'list' object cannot be coerced to type 'double'\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric) + dplyr::group_by(metric)",
        "Error in UseMethod(\"group_by_\") : \n  no applicable method for 'group_by_' applied to an object of class \"character\"\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric) +arrange(desc(metric)) ",
        "Error in arrange(desc(metric)) : \n  no se pudo encontrar la función \"arrange\"\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric) + dplyr::arrange(desc(metric)) ",
        "Error in desc(metric) : no se pudo encontrar la función \"desc\"\n",
        "> ",
        "dplyr::select(as.data.frame(df$result), metric) + dplyr::arrange(dplyr::desc(metric)) ",
        "Error in UseMethod(\"arrange_\") : \n  no applicable method for 'arrange_' applied to an object of class \"c('integer', 'numeric')\"\n",
        "> ",
        "install.packages(\"rlang\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"rlang\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"rlang\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"rlang\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ]
}