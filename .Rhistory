library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
runApp('inst/shiny/clustering')
result = clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm',metrics=c('dunn'),variables = FALSE)
library(Clustering)
result = clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm',metrics=c('dunn'),variables = FALSE)
library(Clustering)
result = clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm',metrics=c('dunn'),variables = FALSE)
result
roxygen2::roxygenize()
install.packages("roxygen2")
roxygen2::roxygenize()
rm(list = c("result"))
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::stulong, min = 4, max = 6,variables = FALSE)
source('~/Desktop/Doctorado Ujaen/Paquetes R/clustering/R/app.R')
result
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
plot_clustering(result,'dunn')
result
lusi <- best_ranked_internal_metrics(result)
lusi
result
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
best_ranked_internal_metrics(result)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
Clustering::best_ranked_internal_metrics(result)
luis <- Clustering::best_ranked_internal_metrics(result)
luis
plot_clustering(luis,'dunn')
plot_clustering(luis,'connectivity')
best_ranked_external_metrics(df = result$result)
library(Clustering)
Clustering::evaluate_validation_external_by_metrics(result)
Clustering::evaluate_best_validation_external_by_metrics(result)
Clustering::result_external_algorithm_by_metric(result,'precision')
Clustering::result_external_algorithm_by_metric(result,'recall')
result
Clustering::result_external_algorithm_by_metric(result,'gmm')
library(Clustering)
Clustering::result_external_algorithm_by_metric(result,c('gmm','daisy')
)
Clustering::result_external_algorithm_by_metric(result,c('gmm','daisy'))
Clustering::result_external_algorithm_by_metric(result,1)
Clustering::result_external_algorithm_by_metric(result,'gmm')
Clustering::result_external_algorithm_by_metric(result,'gmmm')
Clustering::result_external_algorithm_by_metric(result,'gmm')
result_internal_algorithm_by_metric(result,'gmm')
evaluate_best_validation_internal_by_metrics(result,'gmm')
evaluate_best_validation_internal_by_metrics(result)
library(shinycssloaders)
remove.packages("shinycssloaders", lib="~/Library/R/4.0/library")
library(Clustering)
Clustering::appClustering()
library(Clustering)
Clustering::appClustering()
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
typeof(result)
attributes(result)
unclass(result)
fftype(result)
ffype(result)
install.packages("sloop")
ffype(result)
library("sloop")
ffype(result)
sloop::ftype(result)
methods("[[")
?[[]]
?[[
?methods("[[")
help("[[")
result$result[[1]]
result$result[[1,2]]
result$result[[2,2]]
result$result[[3,2]]
result$result[[2]]
result
class(result$result$Algorithm)
class(result$result$precision)
summary(result)
result$measures_execute
result$result[[precision]]
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
result
class(result$result$entropy)
class(result$result$Ranking)
class(result$result$timeExternal)
class(result$result$timeInternal)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
Clustering::basketball
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
library(Clustering)
sort(result)
library(Clustering)
sort(result)
result
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
result
sort(result)
?sapply
result
sapply(list, function)
sapply(result$result, quantile)
sapply(result$result$Dataset, quantile)
sapply(result$result$precision, quantile)
sapply(result$result, function(x) result$result, by)
by <- "Algorithm"
sapply(result$result, function(x) result$result, by)
sapply(result$result, function(x) result$result, "asd")
sapply(result$result, function(x) result$result$Algorithm, "asd")
sapply(result$result, function(x) result$result, "$Algorithm")
sapply(result$result, function(x) result$result$Algorithm, "precision")
sapply(result$result, function(x) result$result$Algorithm)
sapply(result$result, function(x) result$result)
sapply(result$result, function(x) result$result, "precision")
sapply(result$result, function(x, index) result$result[[index]], "precision")
order(sapply(result$result, function(x, index) result$result[[index]], "precision"), decreasing = T)
orden <- order(sapply(result$result, function(x, index) result$result[[index]], "precision"), decreasing = T)
x[orden]
result$result[orden]
result[orden]
orden
result
?order
result$result[,order(names(precision))]
dplyr::arrange(result$result, desc(precision))
sort(clustering,decreasing = F, list('precision','recall'))
sort(result, decreasing = F, list('precision','recall'))
by
sort(result, decreasing = F, c('precision','recall'))
by
library(Clustering)
sort(result, decreasing = F, c('precision','recall'))
by
sort(result, decreasing = F, c('precision','recall'))
length(by)
library(Clustering)
sort(result, decreasing = F, c('precision','recall'))
library(Clustering)
sort(result, decreasing = F, c('precision','recall'))
col
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
strsplit(x, "e")
dplyr::arrange(result$result, desc(c('precision','recall')))
dplyr::arrange(result$result, c('precision','recall'))
dplyr::arrange(result$result, 'precision','recall')
result$result %>% select(order(names(.)))
library(dplyr)
result$result %>% select(order(names(.)))
result$result %>% select(order(names(c(precision,recall))))
result$result %>% select(order(names(c('precision','recall'))))
result$result %>% select(order(c('precision','recall')))
result$result %>% arrange_(.dots = ('precision','recall'))
result$result %>% arrange_(.dots = c('precision','recall'))
result$result %>% arrange(.dots = c('precision','recall'))
result$result %>% arrange(!!! c('precision','recall'))
result$result %>% arrange(!!! c('precision','recall'), desc)
result$result %>% arrange_at(c('precision','recall'))
result$result %>% arrange_at(c('precision','recall'),desc)
result$result %>% arrange_at(c('precision','recall'),asc)
result$result %>% arrange_at(c('precision','recall'))
result$result %>% arrange_at(c('precision','recall'),desc)
library(Clustering)
sort(result, decreasing = T,'precision')
library(Clustering)
result
sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
result
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
result
p <- sort(result,decreasing = TRUE, c('precision'))
p
p <- sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
p <- sort(result,decreasing = TRUE, c('precision'))
p
library(Clustering)
p <- sort(result,decreasing = TRUE, c('precision'))
p
x
p <- sort(result,decreasing = TRUE, c('precision'))
sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
result
x
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
sort(result,decreasing = TRUE, c('precision','entropy'))
sort(result,decreasing = TRUE, c(entropy'))
sort(result,decreasing = TRUE, c('entropy'))
p <- sort(result,decreasing = TRUE, c('entropy'))
p
p$tableInternal
p$tableExternal
p <- sort(result,decreasing = TRUE, c('entropy'))
p
p$tableExternal
sort(result)
library(Clustering)
sort(result)
columns
data
library(Clustering)
sort(result)
columns
colnames[number_col]
number_col
columns[6]
library(Clustering)
sort(result)
cols_remove
p$tableExternal
library(Clustering)
sort(result)
p <- sort(result)
p
p$tableExternal
result
sort(resul,decreasing = TRUE)
sort(resul,decreasing = T)
p<- sort(result,decreasing = T, 'precision')
p
p$tableExternal
library(Clustering)
p<- sort(result,decreasing = T, 'precision')
p$tableExternal
p
?xtable
library(Clustering)
p<- sort(result,decreasing = T, 'precision')
p$tableExternal
library(Clustering)
p<- sort(result,decreasing = T, 'precision')
p
p<- sort(result,decreasing = T, 'precision','recall','entropy')
p
p<- sort(result,decreasing = T, 'dunn','silhoute','entropy')
p<- sort(result,decreasing = T, 'dunn','silhoutte','entropy')
p<- sort(result,decreasing = T, 'dunn','silhouette','entropy')
p
library(Clustering)
roxygen2::roxygenize()
Clustering::result()
roxygen2::roxygenize()
rm(list = c("clustering"))
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
install.packages("devtools")
devtools::document()
roxygen2::roxygenize()
rm(list = c("result"))
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
methods("clustering")
methods("Clustering")
methods("result")
roxygen2::roxygenize()
Clustering::appClustering()
roxygen2::roxygenize()
runApp('inst/shiny/clustering')
runApp()
df_result
result[1]
c
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'))
result
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), variables = T)
result
library("Clustering")
plot_clustering(result,'precision')
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), metrics = 'precision', variables = T)
result
plot_clustering(result,'precision')
runApp()
df_result
plot_clustering(df_result,'precision')
runApp()
library(Clustering)
runApp()
library(Clustering)
Clustering::appClustering()
library(Clustering)
runApp()
?substitute
?is.call
library(Clustering)
result
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), metrics = 'precision', variables = T)
result
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), metrics = 'precision', variables = F)
result
sort(x = result,decreasing = T, 'precision')
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), metrics = c('precision','dunn'), variables = F)
result[precision > 0.02]
library(Clustering)
result[precision > 0.02]
filter
condition
clusteringObject
substitute(condition)
condition
is.call(filter)
library(Clustering)
result[precision > 0.02]
library(Clustering)
result[precision > 0.02]
library(Clustering)
result[precision > 0.02]
filter
eval(filter)
result[precision > 0.02]
library(Clustering)
result[precision > 0.02]
result
sort(result)
summary(result)
class(result)
summary(result)
library(Clustering)
summary(result)
library(Clustering)
roxygen2::roxygenize()
rm(list = c("clustering", "result"))
roxygen2::roxygenize()
library(Clustering)
summary(result)
result
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), metrics = c('precision','dunn'), variables = F)
summary(result)
roxygen2::roxygenize()
rm(list = c("result"))
roxygen2::roxygenize()
library(Clustering)
result
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), metrics = c('precision','dunn'), variables = F)
result
summary(result)
result[precision > 0.03]
library(Clustering)
?eval
eval(2 ^ 2 ^ 3)
eval(precision > 0.02)
library(Clustering)
eval(precision > 0.02)
result[precision > 0.03]
library(Clustering)
result[precision > 0.03]
a
result[precision > 0.03]
a
library(Clustering)
result[precision > 0.03]
filter
clusteringObject$result %>% filter(filter)
clusteringObject$result
clusteringObject$result %>% filter(precision > 0.02)
clusteringObject$result %>% filter('precision' > 0.02)
clusteringObject$result %>% filter(precision > 0.02)
clusteringObject$result
clusteringObject$result %>% select(precision > 0.02)
dplyr::filter(result$result, precision > 0.02)
library(Clustering)
result[precision > 0.03]
dplyr::filter(clusteringObject$result,filter)
result[precision > 0.03]
dplyr::filter(clusteringObject$result,eval(filter))
library(Clustering)
result[precision > 0.03]
library(Clustering)
result[precision > 0.03]
result[precision > 0.11]
result[precision > 0.11 & dunn > 0.17]
result[c(1:n)]
library(Clustering)
result[precision > 0.11 & dunn > 0.17]
library(Clustering)
result[precision > 0.11 & dunn > 0.17]
library(Clustering)
result[precision > 0.11 & dunn > 0.17]
library(Clustering)
result[precision > 0.11 & dunn > 0.17]
result[precision > 0.11 & dunn > 0.15]
result[precision > 0.11 & dunn > 0.13]
result[precision > 0.11 & dunn > 0.09]
result[precision > 0.11]
p<- result[precision > 0.11]
p
p$tableExternal
p$tableInternal
library(SDEFSR)
habermanRules[Unusualness > 0.05]
basketball[]
result
save(result,file = "datasetTest.RData")
save(result,file = "data/datasetTest.RData")
library(Clustering)
load("~/Desktop/Doctorado Ujaen/Paquetes R/clustering/data/datasetTest.RData")
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), variables = F)
result
save(result,file = "data/datasetTest.RData")
roxygen2::roxygenize()
load("~/Desktop/Doctorado Ujaen/Paquetes R/clustering/data/datasetTest.RData")
roxygen2::roxygenize()
rm(list = c("result"))
library(Clustering)
Clustering::result
datasetTest <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), variables = F)
save(datasetTest,file = "data/datasetTest.RData")
roxygen2::roxygenize()
library(Clustering)
Clustering::datasetTest
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
datasetTest
datasetTest <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), variables = F)
cl
roxygen2::roxygenize()
datasetTest <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), variables = F)
save(datasetTest,file = "data/datasetTest.RData")
roxygen2::roxygenize()
library(Clustering)
datasetTest
export_file_external(datasetTest, path = '/Users/luis/Desktop/')
export_file_internal(datasetTest, path = '/Users/luis/Desktop/')
library(Clustering)
export_file_internal(datasetTest, path = '/Users/luis/Desktop/')
path
library(Clustering)
export_file_internal(datasetTest, path = '/Users/luis/Desktop/')
sort(datasetTest, FALSE, 'dunn')
datasetTest
sort(sort(datasetTest, FALSE, 'dunn')
)
library(Clustering)
sort(sort(datasetTest, FALSE, 'dunn'))
sort(datasetTest,TRUE,'precision')
library(Clustering)
sort(datasetTest,TRUE,'precision')
datasetTest[precision > 0.03 & dunn > 0.1]
class(datasetTest$result$entropy)
library(Clustering)
sort(datasetTest,T)
library(Clustering)
sort(datasetTest,T)
!is.null(...)
library(Clustering)
sort(datasetTest,T)
sort(datasetTest,T,'dunnn')
methods(datasetTest)
datasetTest[precision > 0.0.4]
datasetTest[precision > 0.04]
library(Clustering)
datasetTest[precision > 0.04]
datasetTest[precision > 0.01]
library(clustering)
library(Clustering)
datasetTest[precision > 0.01]
library(Clustering)
