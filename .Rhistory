df <- Clustering::clustering(df=Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
df
Clustering::best_ranked_external_metrics(df)
library(Clustering)
Clustering::best_ranked_external_metrics(df)
library(Clustering)
df
Clustering::best_ranked_internal_metrics(df)
Clustering::evaluate_validation_external_by_metrics(df)
Clustering::evaluate_validation_internal_by_metrics(df)
Clustering::evaluate_best_validation_external_by_metrics(df)
Clustering::evaluate_best_validation_internal_by_metrics(df)
df <- Clustering::clustering(df = cluster::agriculture, algorithm = c('gmm','clara'), min = 4, max = 5, metrics = c('precision','dunn'));
as.numeric(Clustering::best_ranked_external_metrics(df)$result[1,7])
as.numeric(Clustering::best_ranked_internal_metrics(df)$result[1,7])
as.numeric(Clustering::evaluate_validation_external_by_metrics(df)$result[1,3])
as.numeric(Clustering::evaluate_validation_internal_by_metrics(df)$result[1,3])
as.numeric(Clustering::evaluate_best_validation_external_by_metrics(df)$result[1,4])
as.numeric(Clustering::evaluate_best_validation_internal_by_metrics(df)$result[1,4])
as.numeric(Clustering::result_external_algorithm_by_metric(df,"clara")$result[1,4])
as.numeric(Clustering::result_internal_algorithm_by_metric(df,"gmm")$result[2,4])
df <- Clustering::clustering(df = cluster::agriculture, algorithm = c('gmm','clara'), min = 4, max = 5, metrics = c('precision','dunn'));
as.numeric(Clustering::result_internal_algorithm_by_metric(df,"gmm")$result[2,4])
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
roxygen2::roxygenize()
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
plot(structure(class="internal"))
roxygen2::roxygenize()
library(Clustering)
Clustering::clustering(df = Clustering::basketball, packages = c("clusterr"), min = 4, max = 6)
plot(df,"precision")
metric
plot(df,"precision")
library(Clustering)
plot(df,"precision")
hasExternalMetrics
hasInternalMetrics
metric
maximum
exits_metric
colnames(df_best_ranked$result)
df_best_ranked
library(Clustering)
plot(df,"precision")
df_best_ranked
plot(df,"recall")
df$result
df
plot(df,"dunn")
library(Clustering)
plot(df,"dunn")
library(Clustering)
plot(df,"dunn")
colnames(df_best_ranked$result)
plot(df,"dunn")
library(Clustering)
plot(df,"dunn")
plot(df,"precision")
plot(df,"dunn")
plot(df,"recall")
library(Clustering)
plot(df,"recall")
isExternalMetrics
isInternalMetrics
plot(df,"recall")
colnames(df$result)
library(Clustering)
plot(df,"recall")
plot(df,"dunn")
plot(df,"precision")
shiny::runApp('inst/shiny/clustering')
runApp('inst/shiny/clustering')
runApp()
runApp('inst/shiny/clustering')
w
w$show()
runApp('inst/shiny/clustering')
first_time
runApp('inst/shiny/clustering')
first_time
runApp('inst/shiny/clustering')
shiny::runApp('inst/shiny/clustering')
$("ul.nav > li").on("click",function(){
if ($("ul.nav > li").first().attr("class")==="active"){}
})
runApp('inst/shiny/clustering')
library(Clustering)
remove.packages("Clustering")
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
shiny::runApp('inst/shiny/clustering')
Clustering::weather
Clustering::clustering(packages = c("clusterr"), algorithm = c("gmm", "kmeans_rcpp"),metrics = ("precision","dunn") )
Clustering::clustering(df=Clustering::weather packages = c("clusterr"), algorithm = c("gmm", "kmeans_rcpp"),metrics = ("precision","dunn") )
Clustering::clustering(df=Clustering::weather, packages = c("clusterr"), algorithm = c("gmm", "kmeans_rcpp"),metrics = ("precision","dunn") )
Clustering::clustering(df=Clustering::weather, packages = c("clusterr"), algorithm = c("gmm", "kmeans_rcpp"),metrics = c("precision","dunn") )
Clustering::clustering(df=Clustering::weather, algorithm = c("gmm", "kmeans_rcpp"),metrics = c("precision","dunn") )
Clustering::appClustering()
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
Clustering::
roxygen2::roxygenize()
library(Clustering)
Clustering::appClustering
clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm', metrics=c("precision") variables = T)
library(Clustering)
clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm', metrics=c("precision") variables = T)
clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm', metrics=c("precision"), variables = T)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
detach("package:Clustering", unload = TRUE)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
result = clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm',metrics=c("precision"),variables = TRUE)
export_file_external(result)
library(Clustering)
export_file_external(result)
roxygen2::roxygenize()
library(Clustering)
export_file_internal(result)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
runApp('inst/shiny/clustering')
result = clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm',metrics=c('dunn'),variables = FALSE)
library(Clustering)
result = clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm',metrics=c('dunn'),variables = FALSE)
library(Clustering)
result = clustering(df = cluster::agriculture,min = 4,max = 5,algorithm='gmm',metrics=c('dunn'),variables = FALSE)
result
roxygen2::roxygenize()
install.packages("roxygen2")
roxygen2::roxygenize()
rm(list = c("result"))
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::stulong, min = 4, max = 6,variables = FALSE)
source('~/Desktop/Doctorado Ujaen/Paquetes R/clustering/R/app.R')
result
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
plot_clustering(result,'dunn')
result
lusi <- best_ranked_internal_metrics(result)
lusi
result
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
best_ranked_internal_metrics(result)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
Clustering::best_ranked_internal_metrics(result)
luis <- Clustering::best_ranked_internal_metrics(result)
luis
plot_clustering(luis,'dunn')
plot_clustering(luis,'connectivity')
best_ranked_external_metrics(df = result$result)
library(Clustering)
Clustering::evaluate_validation_external_by_metrics(result)
Clustering::evaluate_best_validation_external_by_metrics(result)
Clustering::result_external_algorithm_by_metric(result,'precision')
Clustering::result_external_algorithm_by_metric(result,'recall')
result
Clustering::result_external_algorithm_by_metric(result,'gmm')
library(Clustering)
Clustering::result_external_algorithm_by_metric(result,c('gmm','daisy')
)
Clustering::result_external_algorithm_by_metric(result,c('gmm','daisy'))
Clustering::result_external_algorithm_by_metric(result,1)
Clustering::result_external_algorithm_by_metric(result,'gmm')
Clustering::result_external_algorithm_by_metric(result,'gmmm')
Clustering::result_external_algorithm_by_metric(result,'gmm')
result_internal_algorithm_by_metric(result,'gmm')
evaluate_best_validation_internal_by_metrics(result,'gmm')
evaluate_best_validation_internal_by_metrics(result)
library(shinycssloaders)
remove.packages("shinycssloaders", lib="~/Library/R/4.0/library")
library(Clustering)
Clustering::appClustering()
library(Clustering)
Clustering::appClustering()
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, min = 4, max = 6,variables = FALSE)
typeof(result)
attributes(result)
unclass(result)
fftype(result)
ffype(result)
install.packages("sloop")
ffype(result)
library("sloop")
ffype(result)
sloop::ftype(result)
methods("[[")
?[[]]
?[[
?methods("[[")
help("[[")
result$result[[1]]
result$result[[1,2]]
result$result[[2,2]]
result$result[[3,2]]
result$result[[2]]
result
class(result$result$Algorithm)
class(result$result$precision)
summary(result)
result$measures_execute
result$result[[precision]]
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
result
class(result$result$entropy)
class(result$result$Ranking)
class(result$result$timeExternal)
class(result$result$timeInternal)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
Clustering::basketball
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
library(Clustering)
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
library(Clustering)
sort(result)
library(Clustering)
sort(result)
result
result <- Clustering::clustering(df=Clustering::basketball, algorithm = c('gmm'), min = 4, max = 5, variables = F)
result
sort(result)
?sapply
result
sapply(list, function)
sapply(result$result, quantile)
sapply(result$result$Dataset, quantile)
sapply(result$result$precision, quantile)
sapply(result$result, function(x) result$result, by)
by <- "Algorithm"
sapply(result$result, function(x) result$result, by)
sapply(result$result, function(x) result$result, "asd")
sapply(result$result, function(x) result$result$Algorithm, "asd")
sapply(result$result, function(x) result$result, "$Algorithm")
sapply(result$result, function(x) result$result$Algorithm, "precision")
sapply(result$result, function(x) result$result$Algorithm)
sapply(result$result, function(x) result$result)
sapply(result$result, function(x) result$result, "precision")
sapply(result$result, function(x, index) result$result[[index]], "precision")
order(sapply(result$result, function(x, index) result$result[[index]], "precision"), decreasing = T)
orden <- order(sapply(result$result, function(x, index) result$result[[index]], "precision"), decreasing = T)
x[orden]
result$result[orden]
result[orden]
orden
result
?order
result$result[,order(names(precision))]
dplyr::arrange(result$result, desc(precision))
sort(clustering,decreasing = F, list('precision','recall'))
sort(result, decreasing = F, list('precision','recall'))
by
sort(result, decreasing = F, c('precision','recall'))
by
library(Clustering)
sort(result, decreasing = F, c('precision','recall'))
by
sort(result, decreasing = F, c('precision','recall'))
length(by)
library(Clustering)
sort(result, decreasing = F, c('precision','recall'))
library(Clustering)
sort(result, decreasing = F, c('precision','recall'))
col
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
strsplit(x, "e")
dplyr::arrange(result$result, desc(c('precision','recall')))
dplyr::arrange(result$result, c('precision','recall'))
dplyr::arrange(result$result, 'precision','recall')
result$result %>% select(order(names(.)))
library(dplyr)
result$result %>% select(order(names(.)))
result$result %>% select(order(names(c(precision,recall))))
result$result %>% select(order(names(c('precision','recall'))))
result$result %>% select(order(c('precision','recall')))
result$result %>% arrange_(.dots = ('precision','recall'))
result$result %>% arrange_(.dots = c('precision','recall'))
result$result %>% arrange(.dots = c('precision','recall'))
result$result %>% arrange(!!! c('precision','recall'))
result$result %>% arrange(!!! c('precision','recall'), desc)
result$result %>% arrange_at(c('precision','recall'))
result$result %>% arrange_at(c('precision','recall'),desc)
result$result %>% arrange_at(c('precision','recall'),asc)
result$result %>% arrange_at(c('precision','recall'))
result$result %>% arrange_at(c('precision','recall'),desc)
library(Clustering)
sort(result, decreasing = T,'precision')
library(Clustering)
result
sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
result
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
result
p <- sort(result,decreasing = TRUE, c('precision'))
p
p <- sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
p <- sort(result,decreasing = TRUE, c('precision'))
p
library(Clustering)
p <- sort(result,decreasing = TRUE, c('precision'))
p
x
p <- sort(result,decreasing = TRUE, c('precision'))
sort(result,decreasing = TRUE, c('precision'))
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
result
x
library(Clustering)
sort(result,decreasing = TRUE, c('precision'))
sort(result,decreasing = TRUE, c('precision','entropy'))
sort(result,decreasing = TRUE, c(entropy'))
sort(result,decreasing = TRUE, c('entropy'))
p <- sort(result,decreasing = TRUE, c('entropy'))
p
p$tableInternal
p$tableExternal
p <- sort(result,decreasing = TRUE, c('entropy'))
p
p$tableExternal
sort(result)
library(Clustering)
sort(result)
columns
data
library(Clustering)
sort(result)
columns
colnames[number_col]
number_col
columns[6]
library(Clustering)
sort(result)
cols_remove
p$tableExternal
library(Clustering)
sort(result)
p <- sort(result)
p
p$tableExternal
result
sort(resul,decreasing = TRUE)
sort(resul,decreasing = T)
p<- sort(result,decreasing = T, 'precision')
p
p$tableExternal
library(Clustering)
p<- sort(result,decreasing = T, 'precision')
p$tableExternal
p
?xtable
library(Clustering)
p<- sort(result,decreasing = T, 'precision')
p$tableExternal
library(Clustering)
p<- sort(result,decreasing = T, 'precision')
p
p<- sort(result,decreasing = T, 'precision','recall','entropy')
p
p<- sort(result,decreasing = T, 'dunn','silhoute','entropy')
p<- sort(result,decreasing = T, 'dunn','silhoutte','entropy')
p<- sort(result,decreasing = T, 'dunn','silhouette','entropy')
p
library(Clustering)
roxygen2::roxygenize()
Clustering::result()
roxygen2::roxygenize()
rm(list = c("clustering"))
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
install.packages("devtools")
devtools::document()
roxygen2::roxygenize()
rm(list = c("result"))
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
roxygen2::roxygenize()
library(Clustering)
methods("clustering")
methods("Clustering")
methods("result")
roxygen2::roxygenize()
Clustering::appClustering()
roxygen2::roxygenize()
runApp('inst/shiny/clustering')
runApp()
df_result
result[1]
c
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'))
result
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), variables = T)
result
library("Clustering")
plot_clustering(result,'precision')
result <- Clustering::clustering(df=Clustering::basketball, min = 3, max = 4, packages = c('clusterr'), metrics = 'precision', variables = T)
result
plot_clustering(result,'precision')
runApp()
df_result
plot_clustering(df_result,'precision')
runApp()
library(Clustering)
runApp()
library(Clustering)
Clustering::appClustering()
library(Clustering)
runApp()
